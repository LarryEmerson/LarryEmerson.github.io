{"version":3,"sources":["test/Tests.js","global.less","App/index.js","App/Options.js","App.js","serviceWorker.js","index.js"],"names":["cheerio","require","http","iconv","index","titles","Test","Object","_Volumes_MacHD_2018_persona_browser_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","getTitle","i","console","log","get","sres","chunks","on","chunk","push","html","decode","Buffer","concat","$","load","decodeEntities","each","idx","element","$element","title","text","module","exports","__webpack_require__","p","Main","react_default","a","createElement","className","Component","Options","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","visible","context","style","height","undefined","color","button_default","marginRight","type","shape","icon","size","onClick","setState","App","param","screenWidth","window","innerWidth","screenHeight","innerHeight","screenBackgroundColor","Tests","addEventListener","resize","bind","removeEventListener","position","width","backgroundColor","App_Main","Options_Options","optionsHandler","_ref","screen","Boolean","location","hostname","match","ReactDOM","render","src_App_1","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2d0ee1c.chunk.js","sourcesContent":["/**\n * Created by LarryEmerson\n * User: larryemerson@163.com\n * Date: 2019/3/13\n * Time: 10:10 AM\n */\n\nvar cheerio = require('cheerio');\nvar https = require('https');\nvar http = require('http');\nvar iconv = require('iconv-lite');\n\n\n// var url = 'http://www.ygdy8.net/html/gndy/dyzz/index.html';\nvar index = 1; //页面数控制\nvar url = 'http://www.ygdy8.net/html/gndy/dyzz/list_23_';\nvar titles = []; //用于保存title\nexport default class Test {\n\n    constructor() {\n        // http.get(url, function (sres) {\n        //     var chunks = [];\n        //     sres.on('data', function (chunk) {\n        //         chunks.push(chunk);\n        //     });\n        //     // chunks里面存储着网页的 html 内容，将它zhuan ma传给 cheerio.load 之后\n        //     // 就可以得到一个实现了 jQuery 接口的变量，将它命名为 `$`\n        //     // 剩下就都是 jQuery 的内容了\n        //     sres.on('end', function () {\n        //         var titles = [];\n        //         //由于咱们发现此网页的编码格式为gb2312，所以需要对其进行转码，否则乱码\n        //         //依据：“<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gb2312\">”\n        //         var html = iconv.decode(Buffer.concat(chunks), 'gb2312');\n        //         var $ = cheerio.load(html, {decodeEntities: false});\n        //         $('.co_content8 .ulink').each(function (idx, element) {\n        //             var $element = $(element);\n        //             titles.push({\n        //                 title: $element.text()\n        //             })\n        //         })\n        //         console.log(titles);\n        //     });\n        // });\n        this.getTitle(index)\n    }\n\n    getTitle(i) {\n        console.log(\"正在获取第\" + i + \"页的内容\");\n        http.get(url + i + '.html', function (sres) {\n            var chunks = [];\n            sres.on('data', function (chunk) {\n                chunks.push(chunk);\n            });\n            sres.on('end', function () {\n                var html = iconv.decode(Buffer.concat(chunks), 'gb2312');\n                var $ = cheerio.load(html, {decodeEntities: false});\n                $('.co_content8 .ulink').each(function (idx, element) {\n                    var $element = $(element);\n                    titles.push({\n                        title: $element.text()\n                    })\n                })\n                if (i < 2) { //为了方便只爬了两页\n                    this. getTitle(++index); //递归执行，页数+1\n                } else {\n                    console.log(titles);\n                    console.log(\"Title获取完毕！\");\n                }\n            });\n        });\n    }\n}\n\n","module.exports = __webpack_public_path__ + \"static/media/global.293907fa.less\";","/**\n * Created by LarryEmerson\n * User: larryemerson@163.com\n * Date: 2019/3/12\n * Time: 3:27 PM\n */\n\nimport React, {Component} from 'react';\nimport './index.css';\n\nexport default class Main extends Component {\n    render() {\n        return (\n            <div className=\"mainRoot\">\n\n            </div>\n        );\n    }\n}","/**\n * Created by LarryEmerson\n * User: larryemerson@163.com\n * Date: 2019/3/12\n * Time: 3:38 PM\n */\n\nimport React, {Component} from 'react';\nimport './Options.css';\nimport Button from 'antd/lib/button'\n\nexport default class Options extends Component {\n    constructor() {\n        super()\n        this.state = {\n            visible: false,\n        }\n    }\n\n    render() {\n        let context = this\n        return (\n            <div className=\"root\" style={{height: context.state.visible ? '80%' : undefined}}>\n                {context.state.visible ? <div className=\"panel\">\n                    <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div>\n                    <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div>\n                    <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div> <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div>\n                    <div style={{height: '60px', color: '#0da7ff'}}>阿斯顿撒</div>\n\n                </div> : null}\n                <Button\n                    style={{marginRight: '10px'}}\n                    type=\"primary\" shape=\"circle\" icon=\"setting\" size='large'\n                    onClick={() => {\n                        context.setState({\n                            visible: !context.state.visible\n                        })\n                    }}\n                />\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport './App.css';\nimport \"antd/dist/antd.css\";\nimport Main from './App/index'\nimport Options from './App/Options'\nimport './global.less'\nimport \"antd/dist/antd.less\";\n\n// import HDFetcher from './App/HD/HDFetcher'\nimport Tests from './test/Tests'\nclass App extends Component {\n    constructor(param) {\n        super()\n        this.state = {\n            screenWidth: window.innerWidth,\n            screenHeight: window.innerHeight,\n            screenBackgroundColor: '#444',\n            visible: false,\n        }\n    }\n\n    componentDidMount() {\n        new Tests()\n        // let context = this\n        // let fetcher = new HDFetcher()\n        // fetcher.fetchDataList()\n        /*\n        fetch('http://gaoqing.la/bluray/', {\n            method: 'GET',\n            mode: \"no-cors\",\n            credentials: \"include\",\n            redirect: 'follow',\n            headers: {\n                'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                'Access-Control-Allow-Origin': '*',\n            }\n        }).then(function (response) {\n            console.log('Res', response)\n            response.text().then(function (data) {\n                console.log(\"Response\", {response, data})\n            })\n        }).catch(function (error) {\n            console.error(\"-999\", error)\n        }); //*/\n    }\n\n    componentWillMount() {\n        let context = this\n        window.addEventListener('resize', context.resize.bind(context));\n    }\n\n    componentWillUnmount() {\n        let context = this\n        window.removeEventListener('resize', context.resize.bind(context));\n    }\n\n    resize() {\n        let context = this\n        context.setState({\n            screenWidth: window.innerWidth,\n            screenHeight: window.innerHeight,\n        })\n    }\n\n    render() {\n        let context = this\n        return (\n            <div\n                style={{\n                    position: 'relative',\n                    width: context.state.screenWidth,\n                    height: context.state.screenHeight,\n                    backgroundColor: context.state.screenBackgroundColor,\n                }}\n            >\n                <Main/>\n                <Options\n                    visible={context.state.visible}\n                    optionsHandler={({screen}) => {\n                        if (screen) {\n                            context.setState({\n                                screenWidth: screen.width,\n                                screenHeight: screen.height,\n                                screenBackgroundColor: screen.backgroundColor,\n                            })\n                        }\n                    }}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}